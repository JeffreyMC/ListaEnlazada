/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package listaenlazada.proyecto;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;


/**
 *
 * @author Jeffrey
 */
public class Grafico extends javax.swing.JFrame {

    Nodo nodo; //nodo que se va a pasar para recorrerlo y dibujarlo
    
    public Grafico(Nodo nodo) {
        this.nodo = nodo;
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("ELEMENTOS");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("RAÍZ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(487, 487, 487)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel2)))
                .addContainerGap(545, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentResized
    
        //método que dibuja la lista
      public void paint(Graphics g){
            super.paint(g);
            
            //coordenadas de los cuadros y líneas
            int rectX = 40;
            int stringX = 60;
            int lineX = 105;
            int lineNodoX = 90;
            int lineNodoY = 150;
            //fuente
            g.setFont(new Font("default", Font.BOLD, 11));
            
            g.setColor(Color.BLACK);
            g.drawRect(rectX, 40, 50, 50); //cuadro de dato
            //nodo apuntador
            g.drawRect(lineNodoX, 40, 30, 50);
            //dato que mostrará el nodo
            g.drawString(String.valueOf(nodo.data), stringX, 70);
            
            //si no hay siguiente nodo, no se dibuja la línea
            if(nodo.siguiente != null)
              g.drawLine(lineX, 65,lineNodoY, 65);  
            
            
            while(nodo.siguiente != null){
                rectX += 110;   //se aumentan los valores para cambiar las coordenadas
                stringX += 110;
                lineX += 110;
                lineNodoX += 110;
                lineNodoY += 110;
                
                g.setColor(Color.BLACK);
                //medidas y ubicación del rectángulo
                g.drawRect(rectX, 40, 50, 50);
                //nodo apuntador
                g.drawRect(lineNodoX, 40, 30, 50);
                //ubicación del dato que va dentro del cuadro
                g.drawString(String.valueOf(nodo.siguiente.data), stringX, 70);
                
                //si no hay nodo siguiente no se dibuja la línea
                if(nodo.siguiente.siguiente != null)
                    g.drawLine(lineX, 65,lineNodoY, 65); 
                
                nodo = nodo.siguiente;
            }
        }
    
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
